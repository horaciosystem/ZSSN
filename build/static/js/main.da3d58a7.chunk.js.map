{"version":3,"sources":["common/StoreContext/index.js","common/MainColumn/index.js","common/SearchInput/index.js","common/SurvivorsSelectProvider/index.js","lib/useFetch.js","utils/normalizer.js","theme/index.js","pages/SurvivorsList/ReportInfectionModal/index.js","lib/notifications.js","pages/SurvivorsList/ReportInfectionModal/ModalContent.js","pages/SurvivorsList/Toolbar/index.js","pages/SurvivorsList/SurvivorCard/index.js","pages/SurvivorsList/index.js","common/AsyncHandler/index.js","common/InventoryTable/index.js","common/SurvivorInventory/index.js","utils/forms.js","common/SurvivorForm/ErrorLabel.js","common/SurvivorForm/ItemsInput.js","lib/useLocation.js","common/Map/index.js","common/SurvivorForm/LocationInput.js","common/SurvivorForm/index.js","pages/SurvivorEdit/index.js","pages/SurvivorNew/index.js","theme/global.js","App.js","serviceWorker.js","index.js"],"names":["StoreContext","createContext","StoreProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","state","setState","react_default","a","createElement","Provider","value","load","_ref2","url","stateUpdater","fetch","then","data","json","MainColumn","styled","Box","_templateObject","theme","StyledInput","Input","SearchInput_templateObject","palette","SearchInput","_ref$defaultValue","defaultValue","onSearchChange","placeholder","onSubmit","event","preventDefault","target","search","es","relative","minWidth","type","name","absolute","right","fontSize","SurvivorsSelectContext","SurvivorsSelectProvider","items","toggleItem","item","some","it","id","filter","concat","toConsumableArray","toggleItemUpdater","clearItems","useFetch","key","store","useContext","loading","setLoading","_useState3","_useState4","setData","_useState5","_useState6","error","setError","useEffect","catch","extractId","split","pop","objectSpread","defaultTheme","black","black10","text","text75","text50","text25","lightGray","pageWidth","spacing","normal","small","fontWeight","regular","semibold","bold","ReportInfectionModal","disabled","Container","overlay","assign","as","Overlay","Show","Portal","Hide","hide","toasterSettings","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","message","toast","Wrapper","Flex","ModalContent_templateObject","activeStyle","css","_templateObject2","Item","_templateObject3","ifProp","ModalContent","survivorsInfected","closeModal","clear","infected","setInfected","submitting","setSubmitting","marginBottom","appTheme","flexGrow","map","active","onClick","justifyContent","opaque","marginRight","reporter","find","body","FormData","append","method","Toolbar","_useContext","height","padding","alignItems","ReactRouterLink","to","SurvivorsList_ReportInfectionModal","length","ReportInfectionModal_ModalContent","CardLabel","SurvivorCard_templateObject","CardText","SurvivorCard_templateObject2","Name","SurvivorCard_templateObject3","defaultBorderStyle","dangerStyle","_templateObject4","_templateObject5","normalStyle","_templateObject6","ifNotProp","StyledCard","Card","_templateObject7","FieldRow","_templateObject8","SurvivorCard","_ref$survivor","survivor","age","gender","location","fields","objectWithoutProperties","selected","toggleInfection","danger","flexDirection","e","stopPropagation","STORE_KEY","URL","prevState","defineProperty","filterByIdOrName","term","toLowerCase","includes","ListContent","_ref$survivors","survivors","searchTerm","infectionContext","results","useMemo","react_tiny_virtual_list_es","width","itemCount","itemSize","renderItem","index","style","SurvivorsList_SurvivorCard","SurvivorsList","setSearchTerm","common_MainColumn","margin","common_SearchInput","SurvivorsList_Toolbar","color","textColor50","AsyncHandler","fetcher","Items","InventoryTable","onChange","persistValue","_event$target","fieldValue","min","SurvivorInventory","survivorId","inventory","common_AsyncHandler","_ref3","quantity","common_InventoryTable","required","undefined","composeValidators","_len","arguments","validators","Array","_key","reduce","validator","ErrorLabel_templateObject","ItemsInput","common_SurvivorInventory","react_final_form_es","validate","input","meta","touched","ErrorLabel","options","enableHighAccuracy","timeout","maximumAge","useLocation","setLocation","navigator","geolocation","getCurrentPosition","lat","coords","latitude","long","longitude","console","Map","initialLatitude","initialLongitude","handleMarkPosition","markerRef","createRef","lng","mapCenter","markerPosition","setMarkPosition","zoom","marker","center","TileLayer","attribution","Marker","onDragend","current","leafletElement","getLatLng","ref","Popup","LocationInput","_ref3$data","Map_Map","SurvivorForm_templateObject","FIELDS","label","validations","isNaN","renderField","_ref4","_ref4$type","_ref5","SurvivorForm_StyledInput","submitError","SurvivorForm","_ref$initialValues","initialValues","_ref$survivorId","values","formData","_values$items","_arr","entries","_i","_ref10","_ref7","itemsData","acc","_ref8","_ref9","join","normalizeValues","render","handleSubmit","pristine","invalid","SurvivorForm_ItemsInput","SurvivorForm_LocationInput","SurvivorEdit","params","match","response","status","FORM_ERROR","common_SurvivorForm","SurvivorNew","setId","es_Redirect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","abrupt","stop","this","_x","apply","injectGlobal","global_templateObject","App","Fragment","BrowserRouter","Route","exact","path","Redirect","component","lib","newestOnTop","rtl","pauseOnVisibilityChange","Component","Boolean","window","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da3d58a7.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\"\n\nconst StoreContext = createContext()\n\nfunction StoreProvider({ children }) {\n  let [state, setState] = useState({})\n\n  const load = ({ url, stateUpdater }) => {\n    return fetch(url)\n      .then(data => data.json())\n      .then(data => {\n        setState(stateUpdater(data))\n      })\n  }\n\n  return (\n    <StoreContext.Provider value={{ state, load }}>\n      {children}\n    </StoreContext.Provider>\n  )\n}\n\nexport { StoreProvider }\nexport default StoreContext\n","import { styled, Box } from \"reakit\"\nimport { theme } from \"styled-tools\"\n\nconst MainColumn = styled(Box)`\n  max-width: ${theme(\"pageWidth\")};\n  margin: ${theme(\"spacing.normal\")} auto;\n  padding-left: ${theme(\"spacing.normal\")};\n  padding-right: ${theme(\"spacing.normal\")};\n`\n\nexport default MainColumn\n","import React from \"react\"\nimport { styled, Flex, Input, Button } from \"reakit\"\nimport { theme, palette } from \"styled-tools\"\n\nconst StyledInput = styled(Input)`\n  width: 100%;\n  font-size: 1.8rem;\n  border: 1px solid ${palette(\"text50\")};\n  color: ${palette(\"text\")};\n  font-weight: ${theme(\"fontWeight.regular\")};\n`\n\nfunction SearchInput({ defaultValue = \"\", onSearchChange, placeholder }) {\n  let onSubmit = event => {\n    event.preventDefault()\n    onSearchChange(event.target.search.value)\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <Flex relative minWidth=\"320px\">\n        <StyledInput\n          type=\"search\"\n          name=\"search\"\n          defaultValue={defaultValue}\n          placeholder={placeholder}\n        />\n        <Button absolute right={0} fontSize={18} type=\"submit\">\n          Search\n        </Button>\n      </Flex>\n    </form>\n  )\n}\n\nexport default SearchInput\n","import React, { createContext, useState } from \"react\"\n\nconst SurvivorsSelectContext = createContext()\n\nfunction toggleItemUpdater(item) {\n  return items => {\n    const hasItem = items.some(it => it.id === item.id)\n    if (hasItem) {\n      return items.filter(it => it.id !== item.id)\n    }\n    return [...items, item]\n  }\n}\n\nfunction SurvivorsSelectProvider({ children }) {\n  let [state, setState] = useState([])\n\n  let toggleItem = item => setState(toggleItemUpdater(item))\n\n  let clearItems = () => setState([])\n\n  return (\n    <SurvivorsSelectContext.Provider\n      value={{\n        items: state,\n        toggleItem: toggleItem,\n        clearItems: clearItems\n      }}\n    >\n      {children}\n    </SurvivorsSelectContext.Provider>\n  )\n}\n\nexport { SurvivorsSelectProvider }\nexport default SurvivorsSelectContext\n","import { useState, useEffect, useContext } from \"react\"\nimport StoreContext from \"common/StoreContext\"\n\nexport default function useFetch({ url, key, stateUpdater }) {\n  const store = useContext(StoreContext)\n\n  let [loading, setLoading] = useState(true)\n  let [data, setData] = useState(store.state[key])\n  let [error, setError] = useState(null)\n\n  useEffect(\n    () => {\n      setLoading(true)\n      setError(null)\n      store.load({ url, stateUpdater }).catch(setError)\n    },\n    [url, key]\n  )\n\n  useEffect(\n    () => {\n      setData(store.state[key] || null)\n      setLoading(false)\n    },\n    [store.state[key]]\n  )\n\n  return { loading, data, error }\n}\n","export function extractId(url) {\n  let array = url.split(\"/\")\n  return array.pop()\n}\n","import defaultTheme from \"reakit-theme-default\"\n\nconst theme = {\n  ...defaultTheme,\n  palette: {\n    ...defaultTheme.palette,\n    black: \"#2C2C2C\",\n    black10: \"#e5e5e5\",\n    text: \"#2C2C2C\",\n    text75: \"#616161\",\n    text50: \"#959595\",\n    text25: \"#CACACA\",\n    error: \"#d32f2f\",\n    lightGray: \"#e6e5e5\"\n  },\n  pageWidth: \"1200px\",\n  spacing: {\n    normal: \"1.6rem\",\n    small: \"0.8px\"\n  },\n  fontWeight: {\n    regular: 400,\n    semibold: 600,\n    bold: 700\n  }\n}\n\nexport default theme\n","import React from \"react\"\nimport { Block, Button, Backdrop, Portal, Overlay } from \"reakit\"\n\nfunction ReportInfectionModal({ children, disabled }) {\n  return (\n    <Overlay.Container>\n      {overlay => (\n        <Block>\n          <Button as={Overlay.Show} {...overlay} disabled={disabled}>\n            Report an infection\n          </Button>\n          <Backdrop as={[Portal, Overlay.Hide]} {...overlay} />\n          <Overlay as={Portal} {...overlay}>\n            {children(overlay.hide)}\n          </Overlay>\n        </Block>\n      )}\n    </Overlay.Container>\n  )\n}\n\nexport default ReportInfectionModal\n","import { toast } from \"react-toastify\"\n\nconst toasterSettings = {\n  position: \"top-right\",\n  autoClose: 5000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true\n}\n\nexport function success(message) {\n  toast.success(message, toasterSettings)\n}\n","import React, { useState } from \"react\"\nimport { styled, Box, Flex, Button, css, Heading } from \"reakit\"\nimport { ifProp, palette, theme } from \"styled-tools\"\nimport { success } from \"lib/notifications\"\nimport appTheme from \"theme\"\n\nconst Wrapper = styled(Flex)`\n  flex-direction: column;\n  height: 40vh;\n  width: 50vw;\n  color: ${palette(\"text\")};\n`\n\nconst activeStyle = css`\n  box-shadow: inset 10px 0 0 ${palette(\"error\")};\n  border: 1px solid ${palette(\"error\")};\n`\n\nconst Item = styled(Box)`\n  ${ifProp(\"active\", activeStyle)}\n  padding: ${theme(\"spacing.normal\")};\n  border-radius: 3px;\n  cursor: pointer;\n  font-weight: ${theme(\"fontWeight.semibold\")};\n\n  :hover {\n    background-color: ${palette(\"lightGray\")};\n  }\n`\n\nfunction ModalContent({ survivorsInfected, closeModal, clear }) {\n  let [infected, setInfected] = useState(null)\n  let [error, setError] = useState(null)\n  let [submitting, setSubmitting] = useState(false)\n\n  function onSubmit() {\n    setError(null)\n    setSubmitting(true)\n\n    let reporter = survivorsInfected.find(it => it.id !== infected)\n\n    let body = new FormData()\n    body.append(\"infected\", infected)\n\n    return fetch(\n      `//zssn-backend-example.herokuapp.com/api/people/${\n        reporter.id\n      }/report_infection.json`,\n      {\n        method: \"POST\",\n        body\n      }\n    )\n      .then(() => {\n        clear()\n        setSubmitting(false)\n        success(\"Infection reported.\")\n        closeModal()\n      })\n      .catch(error => {\n        setSubmitting(false)\n        setError(error)\n      })\n  }\n\n  return (\n    <Wrapper>\n      <Heading as=\"h3\">Report Infection</Heading>\n      <Box marginBottom={appTheme.spacing.normal}>\n        Select the infected survivor\n      </Box>\n      <Box flexGrow={1}>\n        {survivorsInfected.map(({ id, name }) => (\n          <Item\n            key={id}\n            active={id === infected}\n            onClick={() => setInfected(id)}\n          >\n            {name}\n          </Item>\n        ))}\n      </Box>\n      <Flex justifyContent=\"flex-end\" flexGrow={0}>\n        {error && <span>Report failed!</span>}\n        <Button\n          type=\"button\"\n          opaque={false}\n          marginRight={appTheme.spacing.normal}\n          onClick={closeModal}\n          disabled={submitting}\n        >\n          Cancel\n        </Button>\n        <Button\n          type=\"button\"\n          disabled={!infected || submitting || error}\n          onClick={onSubmit}\n        >\n          {submitting ? \"Reporting...\" : \"Report\"}\n        </Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default ModalContent\n","import React, { useContext } from \"react\"\nimport { Flex, Box, Link } from \"reakit\"\nimport { Link as ReactRouterLink } from \"react-router-dom\"\nimport SurvivorsSelectContext from \"common/SurvivorsSelectProvider\"\nimport appTheme from \"theme\"\nimport ReportInfectionModal from \"../ReportInfectionModal\"\nimport ModalContent from \"../ReportInfectionModal/ModalContent\"\n\nfunction Toolbar() {\n  let { items, clearItems } = useContext(SurvivorsSelectContext)\n\n  return (\n    <Flex\n      height=\"60px\"\n      padding=\"16px 0\"\n      alignItems=\"center\"\n      marginBottom={appTheme.spacing.normal}\n    >\n      <Box marginRight={appTheme.spacing.normal}>\n        <Link as={ReactRouterLink} to=\"/survivors/new\">\n          New survivor\n        </Link>\n      </Box>\n      <ReportInfectionModal disabled={items.length !== 2}>\n        {hide => (\n          <ModalContent\n            survivorsInfected={items}\n            clear={clearItems}\n            closeModal={hide}\n          />\n        )}\n      </ReportInfectionModal>\n    </Flex>\n  )\n}\n\nexport default Toolbar\n","import React from \"react\"\nimport { styled, css, Box, Flex, Card, Link } from \"reakit\"\nimport { Link as ReactRouterLink } from \"react-router-dom\"\nimport { theme, palette, ifProp, ifNotProp } from \"styled-tools\"\n\nconst CardLabel = styled(Box)`\n  color: ${palette(\"text75\")};\n  margin-right: 1rem;\n  font-weight: ${theme(\"fontWeight.semibold\")};\n`\n\nconst CardText = styled(Box)`\n  font-weight: ${theme(\"fontWeight.bold\")};\n`\n\nconst Name = styled(Box)`\n  font-size: 24px;\n  font-weight: ${theme(\"fontWeight.bold\")};\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n`\nconst defaultBorderStyle =\n  \"0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24)\"\n\nconst dangerStyle = css`\n  box-shadow: ${defaultBorderStyle}, inset 10px 0 0 ${palette(\"error\")};\n  padding-left: 0.3rem;\n`\n\nconst activeStyle = css`\n  box-shadow: ${defaultBorderStyle}, 0 10px 6px -6px #777,\n    inset 0 0 0 10px rgba(31, 58, 147, 1);\n`\n\nconst normalStyle = css`\n  ${ifProp(\"active\", activeStyle)};\n  cursor: pointer;\n\n  :hover {\n    box-shadow: ${ifNotProp(\n      \"active\",\n      `${defaultBorderStyle}, 0 10px 6px -6px #777`\n    )};\n    background-color: ${palette(\"lightGray\")};\n  }\n`\n\nconst StyledCard = styled(Card)`\n  width: calc(100% - 5px);\n  border-radius: 3px;\n  box-shadow: ${defaultBorderStyle};\n  color: ${palette(\"text\")};\n  padding: ${theme(\"spacing.small\")};\n  ${ifProp(\"danger\", dangerStyle, normalStyle)};\n`\n\nconst FieldRow = styled(Flex)`\n  margin-bottom: 1rem;\n`\n\nfunction SurvivorCard({\n  survivor: { id, name, age, location, gender, ...fields },\n  selected,\n  toggleInfection\n}) {\n  let infected = fields[\"infected?\"]\n  let onClick = infected ? () => {} : () => toggleInfection({ id, name })\n\n  return (\n    <StyledCard danger={infected} active={selected} onClick={onClick}>\n      <Flex flexDirection=\"column\">\n        <FieldRow>\n          <Name>{name}</Name>\n        </FieldRow>\n        <FieldRow>\n          <Flex flexGrow={1}>\n            <CardLabel>Age</CardLabel>\n            <CardText>{age}</CardText>\n          </Flex>\n          <Flex flexGrow={1}>\n            <CardLabel>Gender</CardLabel>\n            <CardText>{gender}</CardText>\n          </Flex>\n          <Flex flexGrow={1}>\n            <CardLabel>Status</CardLabel>\n            <CardText>{infected ? \"Infected\" : \"Not infected\"}</CardText>\n          </Flex>\n          <Box flexGrow={1}>\n            <Link\n              as={ReactRouterLink}\n              to={`/survivors/${id}/edit`}\n              onClick={e => e.stopPropagation()}\n            >\n              Edit\n            </Link>\n          </Box>\n        </FieldRow>\n      </Flex>\n    </StyledCard>\n  )\n}\n\nexport default SurvivorCard\n","import React, { useState, useContext, useMemo } from \"react\"\nimport { Box, Flex, Heading } from \"reakit\"\nimport VirtualList from \"react-tiny-virtual-list\"\nimport MainColumn from \"common/MainColumn\"\nimport SearchInput from \"common/SearchInput\"\nimport SurvivorsSelectContext, {\n  SurvivorsSelectProvider\n} from \"common/SurvivorsSelectProvider\"\nimport useFetch from \"lib/useFetch\"\nimport { extractId } from \"utils/normalizer\"\nimport appTheme from \"theme\"\nimport Toolbar from \"./Toolbar\"\nimport SurvivorCard from \"./SurvivorCard\"\n\nconst STORE_KEY = \"SURVIVORS\"\nconst URL = \"//zssn-backend-example.herokuapp.com/api/people.json\"\n\nconst stateUpdater = data => prevState => {\n  return { ...prevState, [STORE_KEY]: data }\n}\n\nconst filterByIdOrName = (term, data) => {\n  if (!term) return data\n\n  return (\n    data &&\n    data.filter(it => {\n      let id = extractId(it.location)\n      return term === id || it.name.toLowerCase().includes(term.toLowerCase())\n    })\n  )\n}\n\nfunction SurvivorsList() {\n  let [searchTerm, setSearchTerm] = useState(\"\")\n\n  const survivors = useFetch({ url: URL, key: STORE_KEY, stateUpdater })\n\n  return (\n    <SurvivorsSelectProvider>\n      <MainColumn>\n        <Flex\n          height=\"60px\"\n          padding=\"16px 0\"\n          marginBottom={appTheme.spacing.normal}\n          justifyContent=\"space-between\"\n        >\n          <Heading fontSize={36} margin={0}>\n            Survivors\n          </Heading>\n          <Box marginRight={appTheme.spacing.normal}>\n            <SearchInput\n              onSearchChange={term => setSearchTerm(term)}\n              placeholder=\"Search by name or ID\"\n            />\n          </Box>\n        </Flex>\n        <Toolbar />\n        <Box\n          marginBottom={appTheme.spacing.normal}\n          color={appTheme.palette.textColor50}\n        >\n          *Select two survivors [reporter and infected] to report an infection.\n        </Box>\n        <ListContent survivors={survivors} searchTerm={searchTerm} />\n      </MainColumn>\n    </SurvivorsSelectProvider>\n  )\n}\n\nfunction ListContent({ survivors: { error, loading, data }, searchTerm }) {\n  let infectionContext = useContext(SurvivorsSelectContext)\n\n  if (error) {\n    return <div>Error: {error}</div>\n  }\n\n  if (!data && loading) {\n    return <div>Loading...</div>\n  }\n\n  if (!data) {\n    return null\n  }\n\n  let results = useMemo(() => filterByIdOrName(searchTerm, data), [\n    searchTerm,\n    data\n  ])\n\n  return (\n    <VirtualList\n      width=\"100%\"\n      height={800}\n      itemCount={results.length}\n      itemSize={100}\n      renderItem={({ index, style }) => {\n        let survivor = results[index]\n        let id = extractId(survivor.location)\n        let selected = infectionContext.items.some(it => it.id === id)\n\n        return (\n          <div key={id} style={style}>\n            <SurvivorCard\n              survivor={{ ...survivor, id }}\n              selected={selected}\n              toggleInfection={infectionContext.toggleItem}\n            />\n          </div>\n        )\n      }}\n    />\n  )\n}\n\nexport default SurvivorsList\n","import React from \"react\"\n\nfunction AsyncHandler({ fetcher, children }) {\n  if (fetcher.error) {\n    return <div>Error: {fetcher.error}</div>\n  }\n\n  if (fetcher.loading) {\n    return <div>Loading...</div>\n  }\n\n  if (!fetcher.data) {\n    return null\n  }\n\n  return children(fetcher)\n}\n\nexport default AsyncHandler\n","import React from \"react\"\nimport { Block, Table, Input } from \"reakit\"\n\nconst Items = [\"Water\", \"Food\", \"Medication\", \"Ammunition\"]\n\nfunction InventoryTable({ onChange, value, disabled }) {\n  function persistValue(event) {\n    let { name, value: fieldValue } = event.target\n\n    onChange({\n      ...value,\n      [name]: fieldValue\n    })\n  }\n\n  return (\n    <Block>\n      <Table>\n        <thead>\n          <tr>\n            <th>Item</th>\n            <th>Quantity</th>\n          </tr>\n        </thead>\n        <tbody>\n          {Items.map(it => (\n            <tr key={it}>\n              <th>{it}</th>\n              <td>\n                <Input\n                  name={it}\n                  type=\"number\"\n                  onChange={persistValue}\n                  min=\"0\"\n                  defaultValue={0}\n                  disabled={disabled}\n                />\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </Table>\n    </Block>\n  )\n}\n\nexport default InventoryTable\n","import React from \"react\"\nimport { Block, Table, Input } from \"reakit\"\nimport InventoryTable from \"common/InventoryTable\"\nimport AsyncHandler from \"common/AsyncHandler\"\nimport useFetch from \"lib/useFetch\"\n\nconst STORE_KEY = \"INVENTORY\"\n\nconst stateUpdater = data => prevState => {\n  return { ...prevState, [STORE_KEY]: data }\n}\n\nfunction SurvivorInventory({ survivorId }) {\n  const inventory = useFetch({\n    key: STORE_KEY,\n    url: `//zssn-backend-example.herokuapp.com/api/people/${survivorId}/properties.json`,\n    stateUpdater\n  })\n\n  return (\n    <AsyncHandler fetcher={inventory}>\n      {({ data }) => {\n        if (!data.length) {\n          return <InventoryTable disabled={true} />\n        }\n\n        return (\n          <Block>\n            <Table>\n              <thead>\n                <tr>\n                  <th>Item</th>\n                  <th>Quantity</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ item: { name }, quantity }) => (\n                  <tr key={name}>\n                    <th>{name}</th>\n                    <td>\n                      <Input defaultValue={quantity} disabled={true} />\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          </Block>\n        )\n      }}\n    </AsyncHandler>\n  )\n}\n\nexport default SurvivorInventory\n","export const required = value => (value ? undefined : \"Required\")\n\nexport const mustBeNumber = value =>\n  isNaN(value) ? \"Must be a number\" : undefined\n\nexport const genderValidation = value =>\n  ![\"M\", \"F\"].includes(value) ? \"Must be F or M\" : undefined\n\nexport const minValue = min => value =>\n  isNaN(value) || value >= min ? undefined : `Should be greater than ${min}`\n\nexport const composeValidators = (...validators) => value =>\n  validators.reduce((error, validator) => error || validator(value), undefined)\n","import { styled, Box } from \"reakit\"\nimport { theme, palette } from \"styled-tools\"\n\nexport default styled(Box)`\n  font-weight: ${theme(\"fontWeight.semibold\")};\n  font-size: 1.4rem;\n  color: ${palette(\"error\")};\n`\n","import React from \"react\"\nimport { Field } from \"react-final-form\"\nimport { Box } from \"reakit\"\nimport InventoryTable from \"common/InventoryTable\"\nimport SurvivorInventory from \"common/SurvivorInventory\"\nimport { required } from \"utils/forms\"\nimport ErrorLabel from \"./ErrorLabel\"\n\nfunction ItemsInput({ survivorId }) {\n  return survivorId ? (\n    <Box marginBottom={16}>\n      <SurvivorInventory survivorId={survivorId} />\n    </Box>\n  ) : (\n    <Field name=\"items\" validate={required}>\n      {({ input, meta }) => (\n        <Box marginBottom={16}>\n          <InventoryTable\n            onChange={input.onChange}\n            value={input.value}\n            disabled={false}\n          />\n          {meta.error && meta.touched && <ErrorLabel>{meta.error}</ErrorLabel>}\n        </Box>\n      )}\n    </Field>\n  )\n}\n\nexport default ItemsInput\n","import { useEffect, useState } from \"react\"\n\nconst options = {\n  enableHighAccuracy: true,\n  timeout: 5000,\n  maximumAge: 0\n}\n\nfunction useLocation() {\n  let [data, setLocation] = useState({})\n  let [error, setError] = useState(null)\n  let [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    setError(null)\n\n    // TODO The geolocation API is not working in Google Chrome latest versions.\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        var lat = position.coords.latitude\n        var long = position.coords.longitude\n        setLocation({ lat, long })\n        setLoading(false)\n      },\n      error => {\n        setError(\"Unable to retrieve your location\")\n        setLoading(false)\n        console.error(error)\n      },\n      options\n    )\n  }, [])\n\n  if (!navigator.geolocation) {\n    setError(\"Geolocation is not supported by your browser\")\n  }\n\n  return { data, error, loading }\n}\n\nexport default useLocation\n","import React, { createRef, useEffect, useState } from \"react\"\nimport { Map as LeafletMap, TileLayer, Marker, Popup } from \"react-leaflet\"\n\nexport default function Map({\n  initialLatitude,\n  initialLongitude,\n  handleMarkPosition\n}) {\n  let markerRef = createRef()\n\n  let [mapCenter] = useState({\n    lat: initialLatitude,\n    lng: initialLongitude\n  })\n\n  let [markerPosition, setMarkPosition] = useState({\n    lat: initialLatitude,\n    lng: initialLongitude\n  })\n\n  let [state, setState] = useState({\n    zoom: 13,\n    draggable: true\n  })\n\n  useEffect(() => {\n    handleMarkPosition({ lat: initialLatitude, long: initialLongitude })\n  }, [])\n\n  function toggleDraggable() {\n    setState({ draggable: !state.draggable })\n  }\n\n  function updatePosition() {\n    const marker = markerRef.current\n    if (marker != null) {\n      let markerPosition = marker.leafletElement.getLatLng()\n      setMarkPosition(markerPosition)\n\n      handleMarkPosition({\n        lat: markerPosition.lat,\n        long: markerPosition.lng\n      })\n    }\n  }\n\n  const position = [mapCenter.lat, mapCenter.lng]\n  const marker = [markerPosition.lat, markerPosition.lng]\n\n  return (\n    <LeafletMap center={position} zoom={state.zoom} style={{ height: \"400px\" }}>\n      <TileLayer\n        attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      <Marker\n        draggable={state.draggable}\n        onDragend={updatePosition}\n        position={marker}\n        ref={markerRef}\n      >\n        <Popup minWidth={90}>\n          <span onClick={toggleDraggable}>\n            {state.draggable ? \"DRAG MARKER\" : \"MARKER FIXED\"}\n          </span>\n        </Popup>\n      </Marker>\n    </LeafletMap>\n  )\n}\n","import React from \"react\"\nimport useLocation from \"lib/useLocation\"\nimport AsyncHandler from \"common/AsyncHandler\"\nimport Map from \"common/Map\"\n\nfunction LocationInput({ onChange }) {\n  let location = useLocation()\n\n  function handleMarkPosition({ lat, long }) {\n    onChange(`Point(${long} ${lat})`)\n  }\n\n  return (\n    <AsyncHandler fetcher={location}>\n      {({ data: { lat, long } }) => (\n        <Map\n          initialLatitude={lat}\n          initialLongitude={long}\n          handleMarkPosition={handleMarkPosition}\n        />\n      )}\n    </AsyncHandler>\n  )\n}\n\nexport default LocationInput\n","import React from \"react\"\nimport { Form, Field } from \"react-final-form\"\nimport { styled, Box, Label, Input, Button } from \"reakit\"\nimport ItemsInput from \"./ItemsInput\"\nimport ErrorLabel from \"./ErrorLabel\"\nimport LocationInput from \"./LocationInput\"\nimport {\n  composeValidators,\n  required,\n  mustBeNumber,\n  genderValidation,\n  minValue\n} from \"utils/forms\"\n\nconst StyledInput = styled(Input)`\n  border-color: #dbdbdb;\n  color: #363636;\n  box-shadow: inset 0 1px 2px rgba(10, 10, 10, 0.1);\n`\n\nconst FIELDS = [\n  { name: \"name\", label: \"Name\", validations: required },\n  {\n    name: \"age\",\n    label: \"Age\",\n    type: \"number\",\n    validations: composeValidators(required, mustBeNumber, minValue(0))\n  },\n  {\n    name: \"gender\",\n    label: \"Gender\",\n    validations: composeValidators(required, genderValidation)\n  }\n]\n\nfunction SurvivorForm({ onSubmit, initialValues = {}, survivorId = null }) {\n  function handleSubmit(values) {\n    let formData = normalizeValues(values)\n    return onSubmit(formData)\n  }\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      initialValues={initialValues}\n      render={({ handleSubmit, pristine, invalid }) => (\n        <form onSubmit={handleSubmit}>\n          {FIELDS.map(renderField)}\n          <Label>Inventory</Label>\n          <ItemsInput survivorId={survivorId} />\n          <Field name=\"lonlat\">\n            {({ input }) => (\n              <Box marginBottom={16}>\n                <Label>Last location: {input.value}</Label>\n                <LocationInput onChange={input.onChange} />\n              </Box>\n            )}\n          </Field>\n          <Button disabled={pristine || invalid}>Submit</Button>\n        </form>\n      )}\n    />\n  )\n}\n\nfunction renderField({ name, label, validations, type = \"text\" }) {\n  return (\n    <Field key={name} name={name} validate={validations}>\n      {({ input, meta }) => (\n        <Box marginBottom={16}>\n          <Label>{label}</Label>\n          <StyledInput {...input} type={type} />\n          {(meta.error || meta.submitError) && meta.touched && (\n            <ErrorLabel>{meta.error || meta.submitError}</ErrorLabel>\n          )}\n        </Box>\n      )}\n    </Field>\n  )\n}\n\nexport function normalizeValues(values) {\n  let formData = new FormData()\n  let { items = {}, ...fields } = values\n\n  for (let [key, value] of Object.entries(fields)) {\n    formData.append(`person[${key}]`, value)\n  }\n\n  let itemsData = Object.entries(items).reduce((acc, [key, value]) => {\n    return acc.concat(`${key}:${value}`)\n  }, [])\n\n  formData.append(\"items\", itemsData.join(\";\"))\n\n  return formData\n}\n\nexport default SurvivorForm\n","import React from \"react\"\nimport { Heading } from \"reakit\"\nimport { FORM_ERROR } from \"final-form\"\nimport AsyncHandler from \"common/AsyncHandler\"\nimport MainColumn from \"common/MainColumn\"\nimport SurvivorForm from \"common/SurvivorForm\"\nimport useFetch from \"lib/useFetch\"\nimport { success } from \"lib/notifications\"\n\nconst STORE_KEY = \"SURVIVOR\"\n\nconst stateUpdater = data => prevState => {\n  return { ...prevState, [STORE_KEY]: data }\n}\n\nfunction SurvivorEdit({ match: { params } }) {\n  const survivor = useFetch({\n    key: STORE_KEY,\n    url: `//zssn-backend-example.herokuapp.com/api/people/${params.id}.json`,\n    stateUpdater\n  })\n\n  function onSubmit(body) {\n    return fetch(\n      `//zssn-backend-example.herokuapp.com/api/people/${params.id}.json`,\n      {\n        method: \"PATCH\",\n        body\n      }\n    )\n      .then(response => {\n        if (response.status === 200) {\n          success(\"Survivor updated\")\n          return undefined\n        }\n\n        return response.json()\n      })\n      .catch(() => {\n        return { [FORM_ERROR]: \"Creation failed!\" }\n      })\n  }\n\n  return (\n    <MainColumn>\n      <Heading>Edit</Heading>\n      <Heading fontSize={24}>ID {params.id}</Heading>\n      <AsyncHandler fetcher={survivor}>\n        {({ data }) => (\n          <SurvivorForm\n            onSubmit={onSubmit}\n            initialValues={{ ...data }}\n            survivorId={params.id}\n          />\n        )}\n      </AsyncHandler>\n    </MainColumn>\n  )\n}\n\nexport default SurvivorEdit\n","import React, { useState } from \"react\"\nimport { Heading } from \"reakit\"\nimport { Redirect } from \"react-router\"\nimport { FORM_ERROR } from \"final-form\"\nimport MainColumn from \"common/MainColumn\"\nimport SurvivorForm from \"common/SurvivorForm\"\nimport { success } from \"lib/notifications\"\n\nfunction SurvivorNew() {\n  let [id, setId] = useState(null)\n\n  function onSubmit(body) {\n    return fetch(\"//zssn-backend-example.herokuapp.com/api/people.json\", {\n      method: \"POST\",\n      body\n    })\n      .then(async response => {\n        if (response.status === 201) {\n          success(\"Survivor created\")\n          let survivor = await response.json()\n          setId(survivor.id)\n          return undefined\n        }\n\n        return response.json()\n      })\n      .catch(() => {\n        return { [FORM_ERROR]: \"Creation failed!\" }\n      })\n  }\n\n  if (id) {\n    return <Redirect to={`/survivors/${id}/edit`} />\n  }\n\n  return (\n    <MainColumn>\n      <Heading>New</Heading>\n      <SurvivorForm onSubmit={onSubmit} />\n    </MainColumn>\n  )\n}\n\nexport default SurvivorNew\n","import { injectGlobal } from \"reakit\"\n\ninjectGlobal`\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend, button,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed,\n  figure, figcaption, footer, header, hgroup,\n  main, menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n    background: none;\n    box-shadow: none;\n  }\n\n  article, aside, details, figcaption, figure,\n  footer, header, hgroup, main, menu, nav, section {\n    display: block;\n  }\n\n  *[hidden] {\n    display: none;\n  }\n\n  ol, ul {\n    list-style: none;\n  }\n\n  blockquote, q {\n    quotes: none;\n  }\n\n  blockquote::before, blockquote::after,\n  q::before, q::after {\n    content: '';\n    content: none;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  html {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'Titillium Web', sans-serif;\n    font-size: 2rem;\n    line-height: 1;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n`\n","import React, { Component } from \"react\"\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\"\nimport { Provider as ThemeProvider } from \"reakit\"\nimport { ToastContainer } from \"react-toastify\"\nimport { StoreProvider } from \"common/StoreContext\"\nimport SurvivorsList from \"pages/SurvivorsList\"\nimport SurvivorEdit from \"pages/SurvivorEdit\"\nimport SurvivorNew from \"pages/SurvivorNew\"\nimport theme from \"theme\"\nimport \"react-toastify/dist/ReactToastify.css\"\nimport \"theme/global\"\n\nclass App extends Component {\n  render() {\n    return (\n      <StoreProvider>\n        <ThemeProvider theme={theme}>\n          <>\n            <Router>\n              <>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => <Redirect to=\"/survivors\" />}\n                />\n                <Route path=\"/survivors\" exact component={SurvivorsList} />\n                <Route path=\"/survivors/new\" component={SurvivorNew} />\n                <Route path=\"/survivors/:id/edit\" component={SurvivorEdit} />\n              </>\n            </Router>\n            <ToastContainer\n              position=\"top-center\"\n              autoClose={5000}\n              hideProgressBar={true}\n              newestOnTop={false}\n              closeOnClick\n              rtl={false}\n              pauseOnVisibilityChange\n              draggable\n              pauseOnHover\n            />\n          </>\n        </ThemeProvider>\n      </StoreProvider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}